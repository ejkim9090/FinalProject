/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-02-22 23:52:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1676341296483L));
    _jspx_dependants.put("jar:file:/C:/_1workspace/java/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/semiproject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입 페이지</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<section>\r\n");
      out.write("		<form action=\"");
      out.print(request.getContextPath() );
      out.write("/join\" method=\"post\">\r\n");
      out.write("			이름:<input type=\"text\" name=\"name\" id=\"name\">\r\n");
      out.write("			<br>\r\n");
      out.write("			ID:<input type=\"text\" name=\"id\">\r\n");
      out.write("			<button type=\"button\" id=\"dupId\">아이디중복확인</button>\r\n");
      out.write("			<span></span>\r\n");
      out.write("			<br>\r\n");
      out.write("			비밀번호:<input type=\"password\" name=\"passwd\" id=\"passwd\">\r\n");
      out.write("			<span id=\"invaildResult\"></span>\r\n");
      out.write("			<br>\r\n");
      out.write("			비밀번호 확인:<input type=\"password\" name=\"chkPasswd\" id=\"chkPasswd\">\r\n");
      out.write("			<span id=\"passwdChkResult\"></span>\r\n");
      out.write("			<br>\r\n");
      out.write("			email:<input type=\"email\" name=\"email\" id=\"email\">\r\n");
      out.write("			<br>\r\n");
      out.write("			<button type=\"submit\" disabled=\"disabled\">회원가입하기</button>\r\n");
      out.write("			<button type=\"reset\" class=\"btn reset\">양식초기화</button>\r\n");
      out.write("			<button type=\"button\" class=\"btn main\">메인으로</button>\r\n");
      out.write("		</form>\r\n");
      out.write("	</section>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		let isNameVaild = false;\r\n");
      out.write("		let isIdchkVaild = false;\r\n");
      out.write("		let chkinputpwd = false;\r\n");
      out.write("		let isPwdchkVaild = false;\r\n");
      out.write("		let isEmailVaild = false;\r\n");
      out.write("		\r\n");
      out.write("		$(\".btn.main\").on(\"click\", handlerClickMain);\r\n");
      out.write("		$(\"#name\").on(\"input\", chkName);\r\n");
      out.write("		$(\"#passwd\").on(\"input\", invaildChkPasswd);\r\n");
      out.write("		$(\"#chkPasswd\").on(\"input\", chkPasswd);\r\n");
      out.write("		$(\"#email\").on(\"input\", chkEmail);\r\n");
      out.write("		$(\".btn.reset\").on(\"click\", handlerClickReset);\r\n");
      out.write("		\r\n");
      out.write("		function handlerClickReset() {\r\n");
      out.write("			$(\"button[type=submit]\").attr(\"disabled\", \"disabled\");\r\n");
      out.write("			$(\"#invaildResult\").html(\"\");\r\n");
      out.write("			$(\"#invaildResult\").css(\"color\", \"black\");\r\n");
      out.write("			$(\"#dupId\").next().html(\"\");\r\n");
      out.write("			$(\"#dupId\").next().css(\"color\", \"black\");\r\n");
      out.write("			$(\"#passwdChkResult\").html(\"\");\r\n");
      out.write("			$(\"#passwdChkResult\").css(\"color\", \"black\");\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function chkName() {\r\n");
      out.write("			let chkName = $(\"#name\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(chkName === \"\") {\r\n");
      out.write("				isNameVaild = false;\r\n");
      out.write("			} else {\r\n");
      out.write("				isNameVaild = true;\r\n");
      out.write("			}\r\n");
      out.write("			setButtonState();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function invaildChkPasswd() {\r\n");
      out.write("			let inputPw=$(\"#passwd\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(inputPw.length < 5) {\r\n");
      out.write("				$(\"#invaildResult\").html(\"패스워드가 5글자 밑입니다. 5글자 이상으로 작성해 주세요.\");\r\n");
      out.write("				$(\"#invaildResult\").css(\"color\", \"red\");\r\n");
      out.write("				chkPasswd();\r\n");
      out.write("				chkinputpwd = false;\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"#invaildResult\").html(\"패스워드가 5글자 이상입니다.\");\r\n");
      out.write("				$(\"#invaildResult\").css(\"color\", \"green\");\r\n");
      out.write("				chkPasswd();\r\n");
      out.write("				chkinputpwd = true;\r\n");
      out.write("			}\r\n");
      out.write("			setButtonState();\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("		$(\"#dupId\").click(chkDupId);\r\n");
      out.write("		function chkDupId() {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"");
      out.print(request.getContextPath());
      out.write("/dupId\"\r\n");
      out.write("				, type:\"post\"\r\n");
      out.write("				, async:false\r\n");
      out.write("				, data: {id:$(\"input\").next().next().val()}\r\n");
      out.write("				, success: function(result) {\r\n");
      out.write("					console.log(result);\r\n");
      out.write("					if(result === \"fail\") {\r\n");
      out.write("						$(\"#dupId\").next().html(\"중복아이디가 있습니다. 다시 입력바랍니다.\");\r\n");
      out.write("						$(\"#dupId\").next().css(\"color\", \"red\");\r\n");
      out.write("						isIdchkVaild = false;\r\n");
      out.write("					} else {\r\n");
      out.write("						$(\"#dupId\").next().html(\"사용가능한 아이디입니다.\");\r\n");
      out.write("						$(\"#dupId\").next().css(\"color\", \"green\");\r\n");
      out.write("						isIdchkVaild = true;\r\n");
      out.write("					}\r\n");
      out.write("					setButtonState();\r\n");
      out.write("				}\r\n");
      out.write("				, error: function(request, status, error) {\r\n");
      out.write("					alert(request, status);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function chkPasswd() {\r\n");
      out.write("			let pass = $(\"#passwd\").val();\r\n");
      out.write("			let chkPass = $(\"#chkPasswd\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(chkPass === \"\"){\r\n");
      out.write("				$(\"#passwdChkResult\").html(\"정확한 패스워드 확인을 위해 다시 한번 입력 바랍니다.\");\r\n");
      out.write("				$(\"#passwdChkResult\").css(\"color\", \"red\");\r\n");
      out.write("				isPwdchkVaild = false;\r\n");
      out.write("			} else {\r\n");
      out.write("				if(pass === chkPass) {\r\n");
      out.write("					$(\"#passwdChkResult\").html(\"패스워드가 동일합니다.\");\r\n");
      out.write("					$(\"#passwdChkResult\").css(\"color\", \"green\");\r\n");
      out.write("					$(\"#invaildResult\").html(\"\");\r\n");
      out.write("					$(\"#invaildResult\").css(\"color\", \"black\");\r\n");
      out.write("					isPwdchkVaild = true;\r\n");
      out.write("				} else {\r\n");
      out.write("					$(\"#passwdChkResult\").html(\"패스워드가 동일하지 않습니다.\");\r\n");
      out.write("					$(\"#passwdChkResult\").css(\"color\", \"red\");\r\n");
      out.write("					isPwdchkVaild = false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			setButtonState();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function chkEmail() {\r\n");
      out.write("			let chkEmail = $(\"#email\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(chkEmail === \"\") {\r\n");
      out.write("				isEmailVaild = false;\r\n");
      out.write("			} else {\r\n");
      out.write("				isEmailVaild = true;\r\n");
      out.write("			}\r\n");
      out.write("			setButtonState();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function setButtonState() {\r\n");
      out.write("			if(isNameVaild && isIdchkVaild && chkinputpwd && isPwdchkVaild && isEmailVaild) {\r\n");
      out.write("				$(\"button[type=submit]\").removeAttr(\"disabled\");\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"button[type=submit]\").attr(\"disabled\", \"disabled\");\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function handlerClickMain() {\r\n");
      out.write("			console.log(\"메인화면으로 이동\");\r\n");
      out.write("			location.href=\"");
      out.print(request.getContextPath() );
      out.write("/\";\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
