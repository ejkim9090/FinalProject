/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-02-23 01:22:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1676341296483L));
    _jspx_dependants.put("jar:file:/C:/_1workspace/java/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/semiproject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /WEB-INF/view/myinfo.jsp(12,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty lgnss }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		<script>\r\n");
            out.write("			alert(\"로그인 해주시기 바랍니다.\");\r\n");
            out.write("			location.href=\"");
            out.print(request.getContextPath() );
            out.write("/\"\r\n");
            out.write("		</script>\r\n");
            out.write("	");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("	<form action=\"");
      out.print(request.getContextPath() );
      out.write("/myinfo\" method=\"post\">\r\n");
      out.write("		<h1>내정보 수정</h1>\r\n");
      out.write("		ID:\r\n");
      out.write("		<input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lgnss.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"id\" readonly style=\"border-style: none;\">\r\n");
      out.write("		<br>\r\n");
      out.write("		이름:\r\n");
      out.write("		<input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lgnss.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"name\">\r\n");
      out.write("		<br>\r\n");
      out.write("		비밀번호:\r\n");
      out.write("		<input type=\"password\" name=\"passwd\" id=\"passwd\">\r\n");
      out.write("		<span id=\"invaildChk\"></span>\r\n");
      out.write("		<br>\r\n");
      out.write("		이메일:\r\n");
      out.write("		<input type=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lgnss.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"email\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<button type=\"submit\" class=\"btn submit\" disabled = \"disabled\">수정하기</button>\r\n");
      out.write("		<button type=\"button\" class=\"btn main\">취소</button>\r\n");
      out.write("	</form>\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("	let isNameNull = false; // 이름칸이 널인지?\r\n");
      out.write("	let isEmailNull = false; // 이메일칸이 널인지?\r\n");
      out.write("	let isPasswdVaild = false; // password 조건이 부합한지\r\n");
      out.write("	\r\n");
      out.write("	$(\"#passwd\").on(\"input\", invalidChkPasswd);\r\n");
      out.write("	$(\"#name\").on(\"input\", nullChkName);\r\n");
      out.write("	$(\"#email\").on(\"input\", nullChkEmail);\r\n");
      out.write("	$(\".btn.main\").on(\"click\", handlerclickmail);\r\n");
      out.write("	\r\n");
      out.write("	function setButtonState() {\r\n");
      out.write("		if(!isNameNull && !isEmailNull && isPasswdValid) {\r\n");
      out.write("			$(\"button[type=submit]\").removeAttr(\"disabled\");\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\"button[type=submit]\").attr(\"disabled\", \"disabled\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function invalidChkPasswd() {\r\n");
      out.write("			let pass = $(\"#passwd\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(pass.length < 5) {\r\n");
      out.write("				$(\"#invaildChk\").html(\"패스워드가 5글자 이하입니다. 5글자 이상으로 작성해 주세요.\");\r\n");
      out.write("				$(\"#invaildChk\").css(\"color\", \"red\");\r\n");
      out.write("				isPasswdValid = false;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"#invaildChk\").html(\"패스워드가 5글자 이상입니다.\");\r\n");
      out.write("				$(\"#invaildChk\").css(\"color\", \"green\");\r\n");
      out.write("				isPasswdValid = true;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("		function nullChkName() {\r\n");
      out.write("			let name = $(\"#name\").val();\r\n");
      out.write("			if(name === \"\") {\r\n");
      out.write("				isNameNull = true;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			} else {\r\n");
      out.write("				isNameNull = false;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function nullChkEmail() {\r\n");
      out.write("			let email = $(\"#email\").val();\r\n");
      out.write("			if(email === \"\") {\r\n");
      out.write("				isEmailNull = true;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			} else {\r\n");
      out.write("				isEmailNull = false;\r\n");
      out.write("				setButtonState();\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function handlerclickmail() {\r\n");
      out.write("			console.log(\"메인으로\");\r\n");
      out.write("			location.href=\"");
      out.print(request.getContextPath() );
      out.write("/\";\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
